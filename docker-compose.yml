services:
  rails-web:
    build:
      context: ./marketBack
      dockerfile: Dockerfile
    command: bash -lc "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0 -p 3000"
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: development
      KAFKA_BROKERS: "kafka:9092"
      CASSANDRA_HOSTS: cassandra-db
    networks:
      - arq_net
    depends_on:
      - kafka

  rails-karafka:
    build:
      context: ./marketBack
      dockerfile: Dockerfile
    entrypoint: ["bundle", "exec", "karafka", "server"]
    environment:
      RAILS_ENV: development
      KAFKA_BROKERS: "kafka:9092"
      CASSANDRA_HOSTS: cassandra-db
    depends_on:
      - kafka
      - rails-web
    networks:
      - arq_net

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
    networks:
      - arq_net

networks:
   arq_net:
    external: true